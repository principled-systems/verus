;; quantifier instantiations
=(=>(fuel_defaults, ∀ "prelude_fuel_defaults" id: FuelId. pattern(fuel_bool(id)) =(fuel_bool(id), fuel_bool_default(id))), ∨(¬(fuel_defaults), ∀ "prelude_fuel_defaults" id: FuelId. pattern(fuel_bool(id)) =(fuel_bool(id), fuel_bool_default(id))))
=(=>(sized(•0), sized(DST(•0))), ∨(¬(sized(•0)), sized(DST(•0))))
=(=>(has_type(•1, •0), =(•1, as_type(•1, •0))), ∨(¬(has_type(•1, •0)), =(•1, as_type(•1, •0))))
=(=>(has_type(•0, BOOL), =(•0, B(%B(•0)))), ∨(¬(has_type(•0, BOOL)), =(•0, B(%B(•0)))))
=(=>(has_type(•0, INT), =(•0, I(%I(•0)))), ∨(¬(has_type(•0, INT)), =(•0, I(%I(•0)))))
=(=>(has_type(•0, NAT), =(•0, I(%I(•0)))), ∨(¬(has_type(•0, NAT)), =(•0, I(%I(•0)))))
=(=>(has_type(•0, UINT(•1)), =(•0, I(%I(•0)))), ∨(¬(has_type(•0, UINT(•1))), =(•0, I(%I(•0)))))
=(=>(has_type(•0, SINT(•1)), =(•0, I(%I(•0)))), ∨(¬(has_type(•0, SINT(•1))), =(•0, I(%I(•0)))))
=(=>(has_type(•0, CHAR), =(•0, I(%I(•0)))), ∨(¬(has_type(•0, CHAR)), =(•0, I(%I(•0)))))
=(+(1, 340282366920938463463374607431768211455), 340282366920938463463374607431768211456)
=(-(128), -128)
=(-(32768), -32768)
=(-(2147483648), -2147483648)
=(-(9223372036854775808), -9223372036854775808)
=(-(170141183460469231731687303715884105728), -170141183460469231731687303715884105728)
=(≤(0, nClip(•0)), ≥(nClip(•0), 0))
=(≤(0, •0), ≥(•0, 0))
=(=>(≥(•0, 0), =(•0, nClip(•0))), ∨(¬(≥(•0, 0)), =(•0, nClip(•0))))
=(≤(0, uClip(•1, •0)), ≥(uClip(•1, •0), 0))
=(<(uClip(•1, •0), uHi(•1)), ¬(≤(uHi(•1), uClip(•1, •0))))
=(≤(uHi(•1), uClip(•1, •0)), ≥(+(uClip(•1, •0), *(-1, uHi(•1))), 0))
=(≤(0, •0), ≥(•0, 0))
=(<(•0, uHi(•1)), ¬(≤(uHi(•1), •0)))
=(≤(uHi(•1), •0), ≥(+(•0, *(-1, uHi(•1))), 0))
=(=>(∧(≥(•0, 0), ¬(≥(+(•0, *(-1, uHi(•1))), 0))), =(•0, uClip(•1, •0))), ∨(¬(∧(≥(•0, 0), ¬(≥(+(•0, *(-1, uHi(•1))), 0)))), =(•0, uClip(•1, •0))))
=(≤(iLo(•1), iClip(•1, •0)), ≥(+(iClip(•1, •0), *(-1, iLo(•1))), 0))
=(<(iClip(•1, •0), iHi(•1)), ¬(≤(iHi(•1), iClip(•1, •0))))
=(≤(iHi(•1), iClip(•1, •0)), ≥(+(iClip(•1, •0), *(-1, iHi(•1))), 0))
=(≤(iLo(•1), •0), ≥(+(•0, *(-1, iLo(•1))), 0))
=(<(•0, iHi(•1)), ¬(≤(iHi(•1), •0)))
=(≤(iHi(•1), •0), ≥(+(•0, *(-1, iHi(•1))), 0))
=(=>(∧(≥(+(•0, *(-1, iLo(•1))), 0), ¬(≥(+(•0, *(-1, iHi(•1))), 0))), =(•0, iClip(•1, •0))), ∨(¬(∧(≥(+(•0, *(-1, iLo(•1))), 0), ¬(≥(+(•0, *(-1, iHi(•1))), 0)))), =(•0, iClip(•1, •0))))
=(≤(0, charClip(•0)), ≥(charClip(•0), 0))
=(≤(57344, charClip(•0)), ≥(charClip(•0), 57344))
=(≤(0, •0), ≥(•0, 0))
=(≤(57344, •0), ≥(•0, 57344))
=(=>(∨(∧(≥(•0, 0), ≤(•0, 55295)), ∧(≥(•0, 57344), ≤(•0, 1114111))), =(•0, charClip(•0))), ∨(¬(∨(∧(≥(•0, 0), ≤(•0, 55295)), ∧(≥(•0, 57344), ≤(•0, 1114111)))), =(•0, charClip(•0))))
=(≤(0, •0), ≥(•0, 0))
=(<(•0, uHi(•1)), ¬(≤(uHi(•1), •0)))
=(≤(uHi(•1), •0), ≥(+(•0, *(-1, uHi(•1))), 0))
=(≤(iLo(•1), •0), ≥(+(•0, *(-1, iLo(•1))), 0))
=(<(•0, iHi(•1)), ¬(≤(iHi(•1), •0)))
=(≤(iHi(•1), •0), ≥(+(•0, *(-1, iHi(•1))), 0))
=(≤(0, •0), ≥(•0, 0))
=(≤(57344, •0), ≥(•0, 57344))
=(≤(0, •0), ≥(•0, 0))
=(=>(≥(•0, 0), has_type(I(•0), NAT)), ∨(¬(≥(•0, 0)), has_type(I(•0), NAT)))
=(=>(uInv(•1, •0), has_type(I(•0), UINT(•1))), ∨(¬(uInv(•1, •0)), has_type(I(•0), UINT(•1))))
=(=>(iInv(•1, •0), has_type(I(•0), SINT(•1))), ∨(¬(iInv(•1, •0)), has_type(I(•0), SINT(•1))))
=(=>(charInv(•0), has_type(I(•0), CHAR)), ∨(¬(charInv(•0)), has_type(I(•0), CHAR)))
=(≤(0, %I(•0)), ≥(%I(•0), 0))
=(=>(has_type(•0, NAT), ≥(%I(•0), 0)), ∨(¬(has_type(•0, NAT)), ≥(%I(•0), 0)))
=(=>(has_type(•0, UINT(•1)), uInv(•1, %I(•0))), ∨(¬(has_type(•0, UINT(•1))), uInv(•1, %I(•0))))
=(=>(has_type(•0, SINT(•1)), iInv(•1, %I(•0))), ∨(¬(has_type(•0, SINT(•1))), iInv(•1, %I(•0))))
=(+(•1, •0), +(•0, •1))
=(=(Add(•1, •0), +(•0, •1)), =(+(•0, •1, *(-1, Add(•1, •0))), 0))
=(-(•1, •0), +(•1, *(-1, •0)))
=(+(•1, *(-1, •0)), +(*(-1, •0), •1))
=(=(Sub(•1, •0), +(*(-1, •0), •1)), =(+(•0, *(-1, •1), Sub(•1, •0)), 0))
=(*(•1, •0), *(•0, •1))
=(=(Mul(•1, •0), *(•0, •1)), =(+(Mul(•1, •0), *(-1, *(•0, •1))), 0))
=(=(EucDiv(•1, •0), div(•1, •0)), =(+(EucDiv(•1, •0), *(-1, div(•1, •0))), 0))
=(=(EucMod(•1, •0), mod(•1, •0)), =(+(EucMod(•1, •0), *(-1, mod(•1, •0))), 0))
=(≤(0, •1), ≥(•1, 0))
=(≤(0, Mul(•1, •0)), ≥(Mul(•1, •0), 0))
=(=>(∧(≥(•1, 0), ≥(•0, 0)), ≥(Mul(•1, •0), 0)), ∨(¬(∧(≥(•1, 0), ≥(•0, 0))), ≥(Mul(•1, •0), 0)))
=(≤(0, •1), ≥(•1, 0))
=(<(0, •0), ¬(≤(•0, 0)))
=(≤(0, EucDiv(•1, •0)), ≥(EucDiv(•1, •0), 0))
=(≤(EucDiv(•1, •0), •1), ≥(+(•1, *(-1, EucDiv(•1, •0))), 0))
=(=>(∧(≥(•1, 0), ¬(≤(•0, 0))), ∧(≥(EucDiv(•1, •0), 0), ≥(+(•1, *(-1, EucDiv(•1, •0))), 0))), ∨(¬(∧(≥(•1, 0), ¬(≤(•0, 0)))), ∧(≥(EucDiv(•1, •0), 0), ≥(+(•1, *(-1, EucDiv(•1, •0))), 0))))
=(≤(0, •1), ≥(•1, 0))
=(<(0, •0), ¬(≤(•0, 0)))
=(≤(0, EucMod(•1, •0)), ≥(EucMod(•1, •0), 0))
=(<(EucMod(•1, •0), •0), ¬(≤(•0, EucMod(•1, •0))))
=(≤(•0, EucMod(•1, •0)), ≤(+(•0, *(-1, EucMod(•1, •0))), 0))
=(=>(∧(≥(•1, 0), ¬(≤(•0, 0))), ∧(≥(EucMod(•1, •0), 0), ¬(≤(+(•0, *(-1, EucMod(•1, •0))), 0)))), ∨(¬(∧(≥(•1, 0), ¬(≤(•0, 0)))), ∧(≥(EucMod(•1, •0), 0), ¬(≤(+(•0, *(-1, EucMod(•1, •0))), 0)))))
=(=>(∧(uInv(•0, %I(•2)), uInv(•0, %I(•1))), uInv(•0, bitxor(•2, •1))), ∨(¬(∧(uInv(•0, %I(•2)), uInv(•0, %I(•1)))), uInv(•0, bitxor(•2, •1))))
=(=>(∧(iInv(•0, %I(•2)), iInv(•0, %I(•1))), iInv(•0, bitxor(•2, •1))), ∨(¬(∧(iInv(•0, %I(•2)), iInv(•0, %I(•1)))), iInv(•0, bitxor(•2, •1))))
=(=>(∧(uInv(•0, %I(•2)), uInv(•0, %I(•1))), uInv(•0, bitor(•2, •1))), ∨(¬(∧(uInv(•0, %I(•2)), uInv(•0, %I(•1)))), uInv(•0, bitor(•2, •1))))
=(=>(∧(iInv(•0, %I(•2)), iInv(•0, %I(•1))), iInv(•0, bitor(•2, •1))), ∨(¬(∧(iInv(•0, %I(•2)), iInv(•0, %I(•1)))), iInv(•0, bitor(•2, •1))))
=(=>(∧(uInv(•0, %I(•2)), uInv(•0, %I(•1))), uInv(•0, bitand(•2, •1))), ∨(¬(∧(uInv(•0, %I(•2)), uInv(•0, %I(•1)))), uInv(•0, bitand(•2, •1))))
=(=>(∧(iInv(•0, %I(•2)), iInv(•0, %I(•1))), iInv(•0, bitand(•2, •1))), ∨(¬(∧(iInv(•0, %I(•2)), iInv(•0, %I(•1)))), iInv(•0, bitand(•2, •1))))
=(≤(0, %I(•1)), ≥(%I(•1), 0))
=(=>(∧(uInv(•0, %I(•2)), ≥(%I(•1), 0)), uInv(•0, bitshr(•2, •1))), ∨(¬(∧(uInv(•0, %I(•2)), ≥(%I(•1), 0))), uInv(•0, bitshr(•2, •1))))
=(≤(0, %I(•1)), ≥(%I(•1), 0))
=(=>(∧(iInv(•0, %I(•2)), ≥(%I(•1), 0)), iInv(•0, bitshr(•2, •1))), ∨(¬(∧(iInv(•0, %I(•2)), ≥(%I(•1), 0))), iInv(•0, bitshr(•2, •1))))
=(=>(¬(=(•0, 0)), =(EucMod(•1, •0), singular_mod(•1, •0))), ∨(=(•0, 0), =(EucMod(•1, •0), singular_mod(•1, •0))))
=(≤(0, •2), ≥(•2, 0))
=(<(•2, •1), ¬(≤(•1, •2)))
=(≤(•1, •2), ≤(+(•1, *(-1, •2)), 0))
=(∨(∧(≥(•2, 0), ¬(≤(+(•1, *(-1, •2)), 0))), ∧(=(•2, •1), •0)), ∨(∧(≥(•2, 0), ¬(≤(+(•1, *(-1, •2)), 0))), ∧(=(•2, •1), •0)))
=(=>(fuel_bool_default(fuel%vstd!seq.group_seq_axioms.), ∧(fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.))), ∨(¬(fuel_bool_default(fuel%vstd!seq.group_seq_axioms.)), ∧(fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.))))
=(=>(fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.), fuel_bool_default(fuel%vstd!seq_lib.group_filter_ensures.)), ∨(¬(fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.)), fuel_bool_default(fuel%vstd!seq_lib.group_filter_ensures.)))
=(=>(fuel_bool_default(fuel%vstd!group_vstd_default.), ∧(fuel_bool_default(fuel%vstd!seq.group_seq_axioms.), fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.), fuel_bool_default(fuel%vstd!map.group_map_axioms.), fuel_bool_default(fuel%vstd!set.group_set_axioms.), fuel_bool_default(fuel%vstd!set_lib.group_set_lib_default.), fuel_bool_default(fuel%vstd!std_specs.bits.group_bits_axioms.), fuel_bool_default(fuel%vstd!std_specs.control_flow.group_control_flow_axioms.), fuel_bool_default(fuel%vstd!std_specs.vec.group_vec_axioms.), fuel_bool_default(fuel%vstd!slice.group_slice_axioms.), fuel_bool_default(fuel%vstd!array.group_array_axioms.), fuel_bool_default(fuel%vstd!multiset.group_multiset_axioms.), fuel_bool_default(fuel%vstd!string.group_string_axioms.), fuel_bool_default(fuel%vstd!std_specs.range.group_range_axioms.), fuel_bool_default(fuel%vstd!raw_ptr.group_raw_ptr_axioms.), fuel_bool_default(fuel%vstd!layout.group_layout_axioms.), fuel_bool_default(fuel%vstd!function.group_seq_axioms.))), ∨(¬(fuel_bool_default(fuel%vstd!group_vstd_default.)), ∧(fuel_bool_default(fuel%vstd!seq.group_seq_axioms.), fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.), fuel_bool_default(fuel%vstd!map.group_map_axioms.), fuel_bool_default(fuel%vstd!set.group_set_axioms.), fuel_bool_default(fuel%vstd!set_lib.group_set_lib_default.), fuel_bool_default(fuel%vstd!std_specs.bits.group_bits_axioms.), fuel_bool_default(fuel%vstd!std_specs.control_flow.group_control_flow_axioms.), fuel_bool_default(fuel%vstd!std_specs.vec.group_vec_axioms.), fuel_bool_default(fuel%vstd!slice.group_slice_axioms.), fuel_bool_default(fuel%vstd!array.group_array_axioms.), fuel_bool_default(fuel%vstd!multiset.group_multiset_axioms.), fuel_bool_default(fuel%vstd!string.group_string_axioms.), fuel_bool_default(fuel%vstd!std_specs.range.group_range_axioms.), fuel_bool_default(fuel%vstd!raw_ptr.group_raw_ptr_axioms.), fuel_bool_default(fuel%vstd!layout.group_layout_axioms.), fuel_bool_default(fuel%vstd!function.group_seq_axioms.))))
=(=>(has_type(•0, TYPE%vstd!seq.Seq.($, NAT)), =(•0, Poly%vstd!seq.Seq<nat.>.(%Poly%vstd!seq.Seq<nat.>.(•0)))), ∨(¬(has_type(•0, TYPE%vstd!seq.Seq.($, NAT))), =(•0, Poly%vstd!seq.Seq<nat.>.(%Poly%vstd!seq.Seq<nat.>.(•0)))))
=(=>(has_type(•0, TYPE%tuple%0.), =(•0, Poly%tuple%0.(%Poly%tuple%0.(•0)))), ∨(¬(has_type(•0, TYPE%tuple%0.)), =(•0, Poly%tuple%0.(%Poly%tuple%0.(•0)))))
=(≤(0, vstd!seq.Seq.len.?(•2, •1, •0)), ≥(vstd!seq.Seq.len.?(•2, •1, •0), 0))
=(=>(has_type(•0, TYPE%vstd!seq.Seq.(•2, •1)), ≥(vstd!seq.Seq.len.?(•2, •1, •0), 0)), ∨(¬(has_type(•0, TYPE%vstd!seq.Seq.(•2, •1))), ≥(vstd!seq.Seq.len.?(•2, •1, •0), 0)))
=(<(%I(•0), vstd!seq.Seq.len.?(•3, •2, •1)), ¬(≤(vstd!seq.Seq.len.?(•3, •2, •1), %I(•0))))
=(≤(vstd!seq.Seq.len.?(•3, •2, •1), %I(•0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))
=(=>(%%global_location_label%%0, ∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ∨(¬(%%global_location_label%%0), ∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))))
=(=>(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, INT)), has_type(vstd!seq.Seq.index.?(•3, •2, •1, •0), •2)), ∨(¬(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, INT))), has_type(vstd!seq.Seq.index.?(•3, •2, •1, •0), •2)))
=(<(%I(•0), vstd!seq.Seq.len.?(•3, •2, •1)), ¬(≤(vstd!seq.Seq.len.?(•3, •2, •1), %I(•0))))
=(≤(vstd!seq.Seq.len.?(•3, •2, •1), %I(•0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))
=(=>(%%global_location_label%%1, ∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ∨(¬(%%global_location_label%%1), ∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))))
=(=>(fuel_bool(fuel%vstd!seq.impl&%0.spec_index.), ∀ "internal_vstd!seq.impl&__0.spec_index.?_definition" A&.: Dcr, A&: Type, self!: Poly, i!: Poly. pattern(vstd!seq.impl&%0.spec_index.?(A&., A&, self!, i!)) =(vstd!seq.impl&%0.spec_index.?(A&., A&, self!, i!), vstd!seq.Seq.index.?(A&., A&, self!, i!))), ∨(¬(fuel_bool(fuel%vstd!seq.impl&%0.spec_index.)), ∀ "internal_vstd!seq.impl&__0.spec_index.?_definition" A&.: Dcr, A&: Type, self!: Poly, i!: Poly. pattern(vstd!seq.impl&%0.spec_index.?(A&., A&, self!, i!)) =(vstd!seq.impl&%0.spec_index.?(A&., A&, self!, i!), vstd!seq.Seq.index.?(A&., A&, self!, i!))))
=(=>(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, INT)), has_type(vstd!seq.impl&%0.spec_index.?(•3, •2, •1, •0), •2)), ∨(¬(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, INT))), has_type(vstd!seq.impl&%0.spec_index.?(•3, •2, •1, •0), •2)))
=(<(%I(•0), vstd!seq.Seq.len.?(•3, •2, •1)), ¬(≤(vstd!seq.Seq.len.?(•3, •2, •1), %I(•0))))
=(≤(vstd!seq.Seq.len.?(•3, •2, •1), %I(•0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))
=(∧(sized(•3), ∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ∧(sized(•3), ≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))))
=(=>(∧(sized(•3), ≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))), height_lt(height(vstd!seq.Seq.index.?(•3, •2, •1, •0)), height(•1))), ∨(¬(∧(sized(•3), ≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), height_lt(height(vstd!seq.Seq.index.?(•3, •2, •1, •0)), height(•1))))
=(=>(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, INT)), ∨(¬(∧(sized(•3), ≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), height_lt(height(vstd!seq.Seq.index.?(•3, •2, •1, •0)), height(•1)))), ∨(¬(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, INT))), ¬(∧(sized(•3), ≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), height_lt(height(vstd!seq.Seq.index.?(•3, •2, •1, •0)), height(•1))))
=(=>(fuel_bool(fuel%vstd!seq.axiom_seq_index_decreases.), ∀ "user_vstd__seq__axiom_seq_index_decreases_0" A&.: Dcr, A&: Type, s!: Poly, i!: Poly. pattern(height(vstd!seq.Seq.index.?(A&., A&, s!, i!))) ∨(¬(∧(has_type(s!, TYPE%vstd!seq.Seq.(A&., A&)), has_type(i!, INT))), ¬(∧(sized(A&.), ≥(%I(i!), 0), ¬(≥(+(%I(i!), *(-1, vstd!seq.Seq.len.?(A&., A&, s!))), 0)))), height_lt(height(vstd!seq.Seq.index.?(A&., A&, s!, i!)), height(s!)))), ∨(¬(fuel_bool(fuel%vstd!seq.axiom_seq_index_decreases.)), ∀ "user_vstd__seq__axiom_seq_index_decreases_0" A&.: Dcr, A&: Type, s!: Poly, i!: Poly. pattern(height(vstd!seq.Seq.index.?(A&., A&, s!, i!))) ∨(¬(∧(has_type(s!, TYPE%vstd!seq.Seq.(A&., A&)), has_type(i!, INT))), ¬(∧(sized(A&.), ≥(%I(i!), 0), ¬(≥(+(%I(i!), *(-1, vstd!seq.Seq.len.?(A&., A&, s!))), 0)))), height_lt(height(vstd!seq.Seq.index.?(A&., A&, s!, i!)), height(s!)))))
=(<(%I(•0), vstd!seq.Seq.len.?(•4, •3, •2)), ¬(≤(vstd!seq.Seq.len.?(•4, •3, •2), %I(•0))))
=(≤(vstd!seq.Seq.len.?(•4, •3, •2), %I(•0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0))
=(=>(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0))), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))), ∨(¬(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))))
=(=>(has_type(•0, INT), ∨(¬(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0)))), ∨(¬(has_type(•0, INT)), ¬(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))))
=(=>(sized(•3), =(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))), ∨(¬(sized(•3)), =(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))
=(=>(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2))), ∨(¬(sized(•3)), =(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$))))))), ∨(¬(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))), ¬(sized(•3)), =(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))
=(=>(fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal.), ∀ "user_vstd__seq__axiom_seq_ext_equal_2" A&.: Dcr, A&: Type, s1!: Poly, s2!: Poly. pattern(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)) ∨(¬(∧(has_type(s1!, TYPE%vstd!seq.Seq.(A&., A&)), has_type(s2!, TYPE%vstd!seq.Seq.(A&., A&)))), ¬(sized(A&.)), =(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!), ∧(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!)), ∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(A&., A&, s1!, i$)) pattern(vstd!seq.Seq.index.?(A&., A&, s2!, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(A&., A&, s1!))), 0)))), =(vstd!seq.Seq.index.?(A&., A&, s1!, i$), vstd!seq.Seq.index.?(A&., A&, s2!, i$))))))), ∨(¬(fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal.)), ∀ "user_vstd__seq__axiom_seq_ext_equal_2" A&.: Dcr, A&: Type, s1!: Poly, s2!: Poly. pattern(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)) ∨(¬(∧(has_type(s1!, TYPE%vstd!seq.Seq.(A&., A&)), has_type(s2!, TYPE%vstd!seq.Seq.(A&., A&)))), ¬(sized(A&.)), =(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!), ∧(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!)), ∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(A&., A&, s1!, i$)) pattern(vstd!seq.Seq.index.?(A&., A&, s2!, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(A&., A&, s1!))), 0)))), =(vstd!seq.Seq.index.?(A&., A&, s1!, i$), vstd!seq.Seq.index.?(A&., A&, s2!, i$))))))))
=(<(%I(•0), vstd!seq.Seq.len.?(•4, •3, •2)), ¬(≤(vstd!seq.Seq.len.?(•4, •3, •2), %I(•0))))
=(≤(vstd!seq.Seq.len.?(•4, •3, •2), %I(•0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0))
=(=>(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0))), ext_eq(true, •3, vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))), ∨(¬(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))), ext_eq(true, •3, vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))))
=(=>(has_type(•0, INT), ∨(¬(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))), ext_eq(true, •3, vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0)))), ∨(¬(has_type(•0, INT)), ¬(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))), ext_eq(true, •3, vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))))
=(=>(sized(•3), =(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))), ∨(¬(sized(•3)), =(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))
=(=>(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2))), ∨(¬(sized(•3)), =(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$))))))), ∨(¬(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))), ¬(sized(•3)), =(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))
=(=>(fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal_deep.), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_4" A&.: Dcr, A&: Type, s1!: Poly, s2!: Poly. pattern(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)) ∨(¬(∧(has_type(s1!, TYPE%vstd!seq.Seq.(A&., A&)), has_type(s2!, TYPE%vstd!seq.Seq.(A&., A&)))), ¬(sized(A&.)), =(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!), ∧(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(A&., A&, s1!, i$)) pattern(vstd!seq.Seq.index.?(A&., A&, s2!, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(A&., A&, s1!))), 0)))), ext_eq(true, A&, vstd!seq.Seq.index.?(A&., A&, s1!, i$), vstd!seq.Seq.index.?(A&., A&, s2!, i$))))))), ∨(¬(fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal_deep.)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_4" A&.: Dcr, A&: Type, s1!: Poly, s2!: Poly. pattern(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)) ∨(¬(∧(has_type(s1!, TYPE%vstd!seq.Seq.(A&., A&)), has_type(s2!, TYPE%vstd!seq.Seq.(A&., A&)))), ¬(sized(A&.)), =(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!), ∧(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(A&., A&, s1!, i$)) pattern(vstd!seq.Seq.index.?(A&., A&, s2!, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(A&., A&, s1!))), 0)))), ext_eq(true, A&, vstd!seq.Seq.index.?(A&., A&, s1!, i$), vstd!seq.Seq.index.?(A&., A&, s2!, i$))))))))
=(∨(∧(≥(•2, 0), ¬(≤(+(•1, *(-1, •2)), 0))), ∧(=(•2, •1), •0)), ∨(∧(≥(•2, 0), ¬(≤(+(•1, *(-1, •2)), 0))), ∧(=(•2, •1), •0)))
=(∨(¬(fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.)), fuel_bool_default(fuel%vstd!seq_lib.group_filter_ensures.)), ∨(¬(fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.)), fuel_bool_default(fuel%vstd!seq_lib.group_filter_ensures.)))
=(+(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), +(*(-1, vstd!seq.Seq.len.?(•3, •2, •1)), %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3))))
=(≥(+(*(-1, vstd!seq.Seq.len.?(•3, •2, •1)), %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3))), 0), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0))
=(∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3))))))), ∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))))
=(∨(¬(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))), ¬(sized(•3)), ∧(∨(¬(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$))))), ∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))))), ∨(¬(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))), ¬(sized(•3)), ∧(∨(¬(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$))))), ∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0)))), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))))))
=(+(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), +(*(-1, vstd!seq.Seq.len.?(•3, •2, •1)), %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3))))
=(≥(+(*(-1, vstd!seq.Seq.len.?(•3, •2, •1)), %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3))), 0), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0))
=(∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3))))))), ∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))))
=(∨(¬(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))), ¬(sized(•3)), ∧(∨(¬(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$))))), ∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))))), ∨(¬(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))), ¬(sized(•3)), ∧(∨(¬(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(∧(≥(%I(i$), 0), ¬(≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$))))), ∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0)))), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))))))
=(∧(has_type(as_type(•1, •0), •0), ∨(¬(has_type(•1, •0)), =(•1, as_type(•1, •0)))), ¬(∨(¬(has_type(as_type(•1, •0), •0)), ¬(∨(¬(has_type(•1, •0)), =(•1, as_type(•1, •0)))))))
=(∧(≥(nClip(•0), 0), ∨(¬(≥(•0, 0)), =(•0, nClip(•0)))), ¬(∨(¬(≥(nClip(•0), 0)), ¬(∨(¬(≥(•0, 0)), =(•0, nClip(•0)))))))
=(∧(≥(•0, 0), ¬(≥(+(•0, *(-1, uHi(•1))), 0))), ¬(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0))))
=(¬(¬(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0)))), ∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0)))
=(∨(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0)), =(•0, uClip(•1, •0))), ∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0), =(•0, uClip(•1, •0))))
=(∧(≥(uClip(•1, •0), 0), ¬(≥(+(uClip(•1, •0), *(-1, uHi(•1))), 0)), ∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0), =(•0, uClip(•1, •0)))), ¬(∨(¬(≥(uClip(•1, •0), 0)), ≥(+(uClip(•1, •0), *(-1, uHi(•1))), 0), ¬(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0), =(•0, uClip(•1, •0)))))))
=(∧(≥(+(•0, *(-1, iLo(•1))), 0), ¬(≥(+(•0, *(-1, iHi(•1))), 0))), ¬(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0))))
=(¬(¬(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0)))), ∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0)))
=(∨(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0)), =(•0, iClip(•1, •0))), ∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0), =(•0, iClip(•1, •0))))
=(∧(≥(+(iClip(•1, •0), *(-1, iLo(•1))), 0), ¬(≥(+(iClip(•1, •0), *(-1, iHi(•1))), 0)), ∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0), =(•0, iClip(•1, •0)))), ¬(∨(¬(≥(+(iClip(•1, •0), *(-1, iLo(•1))), 0)), ≥(+(iClip(•1, •0), *(-1, iHi(•1))), 0), ¬(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0), =(•0, iClip(•1, •0)))))))
=(∧(≥(charClip(•0), 0), ≤(charClip(•0), 55295)), ¬(∨(¬(≥(charClip(•0), 0)), ¬(≤(charClip(•0), 55295)))))
=(∧(≥(charClip(•0), 57344), ≤(charClip(•0), 1114111)), ¬(∨(¬(≥(charClip(•0), 57344)), ¬(≤(charClip(•0), 1114111)))))
=(∧(≥(•0, 0), ≤(•0, 55295)), ¬(∨(¬(≥(•0, 0)), ¬(≤(•0, 55295)))))
=(∧(≥(•0, 57344), ≤(•0, 1114111)), ¬(∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111)))))
=(∧(∨(¬(∨(¬(≥(charClip(•0), 0)), ¬(≤(charClip(•0), 55295)))), ¬(∨(¬(≥(charClip(•0), 57344)), ¬(≤(charClip(•0), 1114111))))), ∨(¬(∨(¬(∨(¬(≥(•0, 0)), ¬(≤(•0, 55295)))), ¬(∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111)))))), =(•0, charClip(•0)))), ¬(∨(¬(∨(¬(∨(¬(≥(charClip(•0), 0)), ¬(≤(charClip(•0), 55295)))), ¬(∨(¬(≥(charClip(•0), 57344)), ¬(≤(charClip(•0), 1114111)))))), ¬(∨(¬(∨(¬(∨(¬(≥(•0, 0)), ¬(≤(•0, 55295)))), ¬(∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111)))))), =(•0, charClip(•0)))))))
=(=(uInv(•1, •0), ¬(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0)))), ¬(=(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0)), uInv(•1, •0))))
=(¬(=(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0)), uInv(•1, •0))), ¬(=(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0)), uInv(•1, •0))))
=(=(iInv(•1, •0), ¬(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0)))), ¬(=(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0)), iInv(•1, •0))))
=(¬(=(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0)), iInv(•1, •0))), ¬(=(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0)), iInv(•1, •0))))
=(∧(≥(•0, 0), ≤(•0, 55295)), ¬(∨(¬(≥(•0, 0)), ¬(≤(•0, 55295)))))
=(∧(≥(•0, 57344), ≤(•0, 1114111)), ¬(∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111)))))
=(∧(≥(•1, 0), ≥(•0, 0)), ¬(∨(¬(≥(•1, 0)), ¬(≥(•0, 0)))))
=(¬(¬(∨(¬(≥(•1, 0)), ¬(≥(•0, 0))))), ∨(¬(≥(•1, 0)), ¬(≥(•0, 0))))
=(∨(∨(¬(≥(•1, 0)), ¬(≥(•0, 0))), ≥(Mul(•1, •0), 0)), ∨(¬(≥(•1, 0)), ¬(≥(•0, 0)), ≥(Mul(•1, •0), 0)))
=(∧(≥(•1, 0), ¬(≤(•0, 0))), ¬(∨(¬(≥(•1, 0)), ≤(•0, 0))))
=(¬(¬(∨(¬(≥(•1, 0)), ≤(•0, 0)))), ∨(¬(≥(•1, 0)), ≤(•0, 0)))
=(∧(≥(EucDiv(•1, •0), 0), ≥(+(•1, *(-1, EucDiv(•1, •0))), 0)), ¬(∨(¬(≥(EucDiv(•1, •0), 0)), ¬(≥(+(•1, *(-1, EucDiv(•1, •0))), 0)))))
=(∨(∨(¬(≥(•1, 0)), ≤(•0, 0)), ¬(∨(¬(≥(EucDiv(•1, •0), 0)), ¬(≥(+(•1, *(-1, EucDiv(•1, •0))), 0))))), ∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucDiv(•1, •0), 0)), ¬(≥(+(•1, *(-1, EucDiv(•1, •0))), 0))))))
=(∧(≥(EucMod(•1, •0), 0), ¬(≤(+(•0, *(-1, EucMod(•1, •0))), 0))), ¬(∨(¬(≥(EucMod(•1, •0), 0)), ≤(+(•0, *(-1, EucMod(•1, •0))), 0))))
=(∨(∨(¬(≥(•1, 0)), ≤(•0, 0)), ¬(∨(¬(≥(EucMod(•1, •0), 0)), ≤(+(•0, *(-1, EucMod(•1, •0))), 0)))), ∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucMod(•1, •0), 0)), ≤(+(•0, *(-1, EucMod(•1, •0))), 0)))))
=(∧(uInv(•0, %I(•2)), uInv(•0, %I(•1))), ¬(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))))))
=(¬(¬(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1)))))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1)))))
=(∨(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1)))), uInv(•0, bitxor(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitxor(•2, •1))))
=(∧(iInv(•0, %I(•2)), iInv(•0, %I(•1))), ¬(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))))))
=(¬(¬(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1)))))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1)))))
=(∨(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1)))), iInv(•0, bitxor(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitxor(•2, •1))))
=(∨(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1)))), uInv(•0, bitor(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitor(•2, •1))))
=(∨(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1)))), iInv(•0, bitor(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitor(•2, •1))))
=(∨(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1)))), uInv(•0, bitand(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitand(•2, •1))))
=(∨(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1)))), iInv(•0, bitand(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitand(•2, •1))))
=(∧(uInv(•0, %I(•2)), ≥(%I(•1), 0)), ¬(∨(¬(uInv(•0, %I(•2))), ¬(≥(%I(•1), 0)))))
=(¬(¬(∨(¬(uInv(•0, %I(•2))), ¬(≥(%I(•1), 0))))), ∨(¬(uInv(•0, %I(•2))), ¬(≥(%I(•1), 0))))
=(∨(∨(¬(uInv(•0, %I(•2))), ¬(≥(%I(•1), 0))), uInv(•0, bitshr(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), uInv(•0, bitshr(•2, •1))))
=(∧(iInv(•0, %I(•2)), ≥(%I(•1), 0)), ¬(∨(¬(iInv(•0, %I(•2))), ¬(≥(%I(•1), 0)))))
=(¬(¬(∨(¬(iInv(•0, %I(•2))), ¬(≥(%I(•1), 0))))), ∨(¬(iInv(•0, %I(•2))), ¬(≥(%I(•1), 0))))
=(∨(∨(¬(iInv(•0, %I(•2))), ¬(≥(%I(•1), 0))), iInv(•0, bitshr(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), iInv(•0, bitshr(•2, •1))))
=(∧(≥(•2, 0), ¬(≤(+(•1, *(-1, •2)), 0))), ¬(∨(¬(≥(•2, 0)), ≤(+(•1, *(-1, •2)), 0))))
=(∧(=(•2, •1), •0), ¬(∨(¬(=(•2, •1)), ¬(•0))))
=(∨(¬(∨(¬(≥(•2, 0)), ≤(+(•1, *(-1, •2)), 0))), ¬(∨(¬(=(•2, •1)), ¬(•0)))), ∨(¬(∨(¬(≥(•2, 0)), ≤(+(•1, *(-1, •2)), 0))), ¬(∨(¬(=(•2, •1)), ¬(•0)))))
=(∧(=(height(•2), height(•1)), •0), ¬(∨(¬(=(height(•2), height(•1))), ¬(•0))))
=(∨(height_lt(height(•2), height(•1)), ¬(∨(¬(=(height(•2), height(•1))), ¬(•0)))), ∨(height_lt(height(•2), height(•1)), ¬(∨(¬(=(height(•2), height(•1))), ¬(•0)))))
=(∧(partial-order(•1, •0), ¬(=(•1, •0))), ¬(∨(¬(partial-order(•1, •0)), =(•1, •0))))
=(=(height_lt(•1, •0), ¬(∨(¬(partial-order(•1, •0)), =(•1, •0)))), ¬(=(∨(¬(partial-order(•1, •0)), =(•1, •0)), height_lt(•1, •0))))
=(¬(=(∨(¬(partial-order(•1, •0)), =(•1, •0)), height_lt(•1, •0))), ¬(=(∨(¬(partial-order(•1, •0)), =(•1, •0)), height_lt(•1, •0))))
=(∧(fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.)), ¬(∨(¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.)), ¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.)), ¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.)))))
=(∧(fuel_bool_default(fuel%vstd!seq.group_seq_axioms.), fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.), fuel_bool_default(fuel%vstd!map.group_map_axioms.), fuel_bool_default(fuel%vstd!set.group_set_axioms.), fuel_bool_default(fuel%vstd!set_lib.group_set_lib_default.), fuel_bool_default(fuel%vstd!std_specs.bits.group_bits_axioms.), fuel_bool_default(fuel%vstd!std_specs.control_flow.group_control_flow_axioms.), fuel_bool_default(fuel%vstd!std_specs.vec.group_vec_axioms.), fuel_bool_default(fuel%vstd!slice.group_slice_axioms.), fuel_bool_default(fuel%vstd!array.group_array_axioms.), fuel_bool_default(fuel%vstd!multiset.group_multiset_axioms.), fuel_bool_default(fuel%vstd!string.group_string_axioms.), fuel_bool_default(fuel%vstd!std_specs.range.group_range_axioms.), fuel_bool_default(fuel%vstd!raw_ptr.group_raw_ptr_axioms.), fuel_bool_default(fuel%vstd!layout.group_layout_axioms.), fuel_bool_default(fuel%vstd!function.group_seq_axioms.)), ¬(∨(¬(fuel_bool_default(fuel%vstd!seq.group_seq_axioms.)), ¬(fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(fuel_bool_default(fuel%vstd!map.group_map_axioms.)), ¬(fuel_bool_default(fuel%vstd!set.group_set_axioms.)), ¬(fuel_bool_default(fuel%vstd!set_lib.group_set_lib_default.)), ¬(fuel_bool_default(fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(fuel_bool_default(fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(fuel_bool_default(fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(fuel_bool_default(fuel%vstd!slice.group_slice_axioms.)), ¬(fuel_bool_default(fuel%vstd!array.group_array_axioms.)), ¬(fuel_bool_default(fuel%vstd!multiset.group_multiset_axioms.)), ¬(fuel_bool_default(fuel%vstd!string.group_string_axioms.)), ¬(fuel_bool_default(fuel%vstd!std_specs.range.group_range_axioms.)), ¬(fuel_bool_default(fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(fuel_bool_default(fuel%vstd!layout.group_layout_axioms.)), ¬(fuel_bool_default(fuel%vstd!function.group_seq_axioms.)))))
=(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))), ¬(∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))))
=(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, INT)), ¬(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)))))
=(¬(¬(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT))))), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT))))
=(∨(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT))), has_type(vstd!seq.Seq.index.?(•3, •2, •1, •0), •2)), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.Seq.index.?(•3, •2, •1, •0), •2)))
=(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))), ¬(∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))))
=(∨(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT))), has_type(vstd!seq.impl&%0.spec_index.?(•3, •2, •1, •0), •2)), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.impl&%0.spec_index.?(•3, •2, •1, •0), •2)))
=(∧(sized(•3), ≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))), ¬(∨(¬(sized(•3)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0))))
=(¬(¬(∨(¬(sized(•3)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))), ∨(¬(sized(•3)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)))
=(∨(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT))), ∨(¬(sized(•3)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0)), height_lt(height(vstd!seq.Seq.index.?(•3, •2, •1, •0)), height(•1))), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), ¬(sized(•3)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), height_lt(height(vstd!seq.Seq.index.?(•3, •2, •1, •0)), height(•1))))
=(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2))), ¬(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2))))))
=(¬(¬(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))))), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))))
=(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0))), ¬(∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0))))
=(¬(¬(∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))), ∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))
=(∨(¬(has_type(•0, INT)), ∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))), ∨(¬(has_type(•0, INT)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))))
=(∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))
=(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0))), ¬(∨(¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0))))
=(¬(¬(∨(¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0)))), ∨(¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0)))
=(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ∨(¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0)), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), ∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))
=(∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))), ∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))))
=(∧(∨(¬(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$))))))), ∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3))))))), ¬(∨(¬(∨(¬(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))), ¬(∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3))))))))))
=(∨(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))), ¬(sized(•3)), ¬(∨(¬(∨(¬(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))), ¬(∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))))))), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2))), ¬(sized(•3)), ¬(∨(¬(∨(¬(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))), ¬(∨(ext_eq(false, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))))))))
=(∧(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2)), has_type(•0, TYPE%vstd!seq.Seq.(•3, •2))), ¬(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2))))))
=(¬(¬(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))))), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))))
=(∧(≥(%I(•0), 0), ¬(≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0))), ¬(∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0))))
=(¬(¬(∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))), ∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)))
=(∨(¬(has_type(•0, INT)), ∨(¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0)), ext_eq(true, •3, vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))), ∨(¬(has_type(•0, INT)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0), ext_eq(true, •3, vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))))
=(∧(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0)), ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))
=(∧(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0), ¬(≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0))), ¬(∨(¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0))))
=(¬(¬(∨(¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0)))), ∨(¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0)))
=(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ∨(¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0)), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), ∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))
=(∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))), ∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))))
=(∧(∨(¬(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$))))))), ∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3))))))), ¬(∨(¬(∨(¬(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))), ¬(∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3))))))))))
=(∨(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2)))), ¬(sized(•3)), ¬(∨(¬(∨(¬(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))), ¬(∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))))))), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, TYPE%vstd!seq.Seq.(•3, •2))), ¬(sized(•3)), ¬(∨(¬(∨(¬(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0)), ¬(∨(¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(•3, •2, •1, i$)) pattern(vstd!seq.Seq.index.?(•3, •2, •0, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$), vstd!seq.Seq.index.?(•3, •2, •0, i$)))))))), ¬(∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))))))))
=(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0), =(•0, uClip(•1, •0))), ∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0), =(•0, uClip(•1, •0))))
=(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0), =(•0, iClip(•1, •0))), ∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0), =(•0, iClip(•1, •0))))
=(∨(¬(≥(charClip(•0), 0)), ¬(≤(charClip(•0), 55295))), ∨(¬(≥(charClip(•0), 0)), ¬(≤(charClip(•0), 55295))))
=(∨(¬(≥(charClip(•0), 57344)), ¬(≤(charClip(•0), 1114111))), ∨(¬(≥(charClip(•0), 57344)), ¬(≤(charClip(•0), 1114111))))
=(∨(¬(≥(•0, 0)), ¬(≤(•0, 55295))), ∨(¬(≥(•0, 0)), ¬(≤(•0, 55295))))
=(∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111))), ∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111))))
=(∨(¬(≥(•0, 0)), ¬(≤(•0, 55295))), ∨(¬(≥(•0, 0)), ¬(≤(•0, 55295))))
=(∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111))), ∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111))))
=(∨(¬(≥(•1, 0)), ¬(≥(•0, 0)), ≥(Mul(•1, •0), 0)), ∨(¬(≥(•1, 0)), ¬(≥(•0, 0)), ≥(Mul(•1, •0), 0)))
=(∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucDiv(•1, •0), 0)), ¬(≥(+(•1, *(-1, EucDiv(•1, •0))), 0))))), ∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucDiv(•1, •0), 0)), ¬(≥(+(•1, *(-1, EucDiv(•1, •0))), 0))))))
=(∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucMod(•1, •0), 0)), ≤(+(•0, *(-1, EucMod(•1, •0))), 0)))), ∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucMod(•1, •0), 0)), ≤(+(•0, *(-1, EucMod(•1, •0))), 0)))))
=(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitxor(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitxor(•2, •1))))
=(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitxor(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitxor(•2, •1))))
=(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitor(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitor(•2, •1))))
=(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitor(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitor(•2, •1))))
=(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitand(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitand(•2, •1))))
=(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitand(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitand(•2, •1))))
=(∨(¬(uInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), uInv(•0, bitshr(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), uInv(•0, bitshr(•2, •1))))
=(∨(¬(iInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), iInv(•0, bitshr(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), iInv(•0, bitshr(•2, •1))))
=(∨(¬(=(•2, •1)), ¬(•0)), ∨(¬(=(•2, •1)), ¬(•0)))
=(∨(¬(=(height(•2), height(•1))), ¬(•0)), ∨(¬(=(height(•2), height(•1))), ¬(•0)))
=(∨(¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.)), ¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.)), ¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.))), ∨(¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.)), ¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.)), ¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.))))
=(∨(¬(fuel_bool_default(fuel%vstd!seq.group_seq_axioms.)), ¬(fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(fuel_bool_default(fuel%vstd!map.group_map_axioms.)), ¬(fuel_bool_default(fuel%vstd!set.group_set_axioms.)), ¬(fuel_bool_default(fuel%vstd!set_lib.group_set_lib_default.)), ¬(fuel_bool_default(fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(fuel_bool_default(fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(fuel_bool_default(fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(fuel_bool_default(fuel%vstd!slice.group_slice_axioms.)), ¬(fuel_bool_default(fuel%vstd!array.group_array_axioms.)), ¬(fuel_bool_default(fuel%vstd!multiset.group_multiset_axioms.)), ¬(fuel_bool_default(fuel%vstd!string.group_string_axioms.)), ¬(fuel_bool_default(fuel%vstd!std_specs.range.group_range_axioms.)), ¬(fuel_bool_default(fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(fuel_bool_default(fuel%vstd!layout.group_layout_axioms.)), ¬(fuel_bool_default(fuel%vstd!function.group_seq_axioms.))), ∨(¬(fuel_bool_default(fuel%vstd!seq.group_seq_axioms.)), ¬(fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(fuel_bool_default(fuel%vstd!map.group_map_axioms.)), ¬(fuel_bool_default(fuel%vstd!set.group_set_axioms.)), ¬(fuel_bool_default(fuel%vstd!set_lib.group_set_lib_default.)), ¬(fuel_bool_default(fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(fuel_bool_default(fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(fuel_bool_default(fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(fuel_bool_default(fuel%vstd!slice.group_slice_axioms.)), ¬(fuel_bool_default(fuel%vstd!array.group_array_axioms.)), ¬(fuel_bool_default(fuel%vstd!multiset.group_multiset_axioms.)), ¬(fuel_bool_default(fuel%vstd!string.group_string_axioms.)), ¬(fuel_bool_default(fuel%vstd!std_specs.range.group_range_axioms.)), ¬(fuel_bool_default(fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(fuel_bool_default(fuel%vstd!layout.group_layout_axioms.)), ¬(fuel_bool_default(fuel%vstd!function.group_seq_axioms.))))
=(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.Seq.index.?(•3, •2, •1, •0), •2)), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.Seq.index.?(•3, •2, •1, •0), •2)))
=(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.impl&%0.spec_index.?(•3, •2, •1, •0), •2)), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.impl&%0.spec_index.?(•3, •2, •1, •0), •2)))
=(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), ¬(sized(•3)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), height_lt(height(vstd!seq.Seq.index.?(•3, •2, •1, •0)), height(•1))), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), ¬(sized(•3)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•3, •2, •1))), 0), height_lt(height(vstd!seq.Seq.index.?(•3, •2, •1, •0)), height(•1))))
=(∨(¬(has_type(•0, INT)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))), ∨(¬(has_type(•0, INT)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))))
=(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), ∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))
=(∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))), ∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))))
=(∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0), =(•0, uClip(•1, •0))), ∨(¬(≥(•0, 0)), ≥(+(•0, *(-1, uHi(•1))), 0), =(•0, uClip(•1, •0))))
=(∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0), =(•0, iClip(•1, •0))), ∨(¬(≥(+(•0, *(-1, iLo(•1))), 0)), ≥(+(•0, *(-1, iHi(•1))), 0), =(•0, iClip(•1, •0))))
=(∨(¬(≥(charClip(•0), 0)), ¬(≤(charClip(•0), 55295))), ∨(¬(≥(charClip(•0), 0)), ¬(≤(charClip(•0), 55295))))
=(∨(¬(≥(charClip(•0), 57344)), ¬(≤(charClip(•0), 1114111))), ∨(¬(≥(charClip(•0), 57344)), ¬(≤(charClip(•0), 1114111))))
=(∨(¬(≥(•0, 0)), ¬(≤(•0, 55295))), ∨(¬(≥(•0, 0)), ¬(≤(•0, 55295))))
=(∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111))), ∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111))))
=(∨(¬(≥(•0, 0)), ¬(≤(•0, 55295))), ∨(¬(≥(•0, 0)), ¬(≤(•0, 55295))))
=(∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111))), ∨(¬(≥(•0, 57344)), ¬(≤(•0, 1114111))))
=(∨(¬(≥(•1, 0)), ¬(≥(•0, 0)), ≥(Mul(•1, •0), 0)), ∨(¬(≥(•1, 0)), ¬(≥(•0, 0)), ≥(Mul(•1, •0), 0)))
=(∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucDiv(•1, •0), 0)), ¬(≥(+(•1, *(-1, EucDiv(•1, •0))), 0))))), ∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucDiv(•1, •0), 0)), ¬(≥(+(•1, *(-1, EucDiv(•1, •0))), 0))))))
=(∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucMod(•1, •0), 0)), ≤(+(•0, *(-1, EucMod(•1, •0))), 0)))), ∨(¬(≥(•1, 0)), ≤(•0, 0), ¬(∨(¬(≥(EucMod(•1, •0), 0)), ≤(+(•0, *(-1, EucMod(•1, •0))), 0)))))
=(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitxor(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitxor(•2, •1))))
=(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitxor(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitxor(•2, •1))))
=(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitor(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitor(•2, •1))))
=(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitor(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitor(•2, •1))))
=(∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitand(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(uInv(•0, %I(•1))), uInv(•0, bitand(•2, •1))))
=(∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitand(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(iInv(•0, %I(•1))), iInv(•0, bitand(•2, •1))))
=(∨(¬(uInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), uInv(•0, bitshr(•2, •1))), ∨(¬(uInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), uInv(•0, bitshr(•2, •1))))
=(∨(¬(iInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), iInv(•0, bitshr(•2, •1))), ∨(¬(iInv(•0, %I(•2))), ¬(≥(%I(•1), 0)), iInv(•0, bitshr(•2, •1))))
=(∨(¬(=(•2, •1)), ¬(•0)), ∨(¬(=(•2, •1)), ¬(•0)))
=(∨(¬(=(height(•2), height(•1))), ¬(•0)), ∨(¬(=(height(•2), height(•1))), ¬(•0)))
=(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.Seq.index.?(•3, •2, •1, •0), •2)), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.Seq.index.?(•3, •2, •1, •0), •2)))
=(∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.impl&%0.spec_index.?(•3, •2, •1, •0), •2)), ∨(¬(has_type(•1, TYPE%vstd!seq.Seq.(•3, •2))), ¬(has_type(•0, INT)), has_type(vstd!seq.impl&%0.spec_index.?(•3, •2, •1, •0), •2)))
=(∨(¬(has_type(•0, INT)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))), ∨(¬(has_type(•0, INT)), ¬(≥(%I(•0), 0)), ≥(+(%I(•0), *(-1, vstd!seq.Seq.len.?(•4, •3, •2))), 0), =(vstd!seq.Seq.index.?(•4, •3, •2, •0), vstd!seq.Seq.index.?(•4, •3, •1, •0))))
=(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), ∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))), 0), =(vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(•0, •1, •2, •3)))))
=(∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))), ∨(ext_eq(true, TYPE%vstd!seq.Seq.(•3, •2), •1, •0), ¬(=(vstd!seq.Seq.len.?(•3, •2, •1), vstd!seq.Seq.len.?(•3, •2, •0))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), 0)), ≤(+(vstd!seq.Seq.len.?(•3, •2, •1), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))), 0), ext_eq(true, •2, vstd!seq.Seq.index.?(•3, •2, •1, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)), vstd!seq.Seq.index.?(•3, •2, •0, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(•0, •1, •2, •3)))))))
=(=>(%%location_label%%0, tmp%1), ∨(¬(%%location_label%%0), tmp%1))
=(=>(=(tmp%1, =(%I(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0))), 0)), ∨(¬(%%location_label%%0), tmp%1)), ∨(¬(=(tmp%1, =(%I(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0))), 0))), ¬(%%location_label%%0), tmp%1))
=(∨(¬(has_type(Poly%vstd!seq.Seq<nat.>.(s!), TYPE%vstd!seq.Seq.($, NAT))), ¬(has_type(I(0), INT)), has_type(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0)), NAT)), ∨(¬(has_type(Poly%vstd!seq.Seq<nat.>.(s!), TYPE%vstd!seq.Seq.($, NAT))), ¬(has_type(I(0), INT)), has_type(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0)), NAT)))
has_type(Poly%vstd!seq.Seq<nat.>.(s!), TYPE%vstd!seq.Seq.($, NAT))
has_type(I(0), INT)
has_type(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0)), NAT)
=(=(0, %I(I(0))), =(%I(I(0)), 0))
%I(I(0))
=(%I(I(0)), 0)
%Poly%vstd!seq.Seq<nat.>.(Poly%vstd!seq.Seq<nat.>.(s!))
=(s!, %Poly%vstd!seq.Seq<nat.>.(Poly%vstd!seq.Seq<nat.>.(s!)))
Poly%vstd!seq.Seq<nat.>.(%Poly%vstd!seq.Seq<nat.>.(Poly%vstd!seq.Seq<nat.>.(s!)))
has_type(Poly%vstd!seq.Seq<nat.>.(%Poly%vstd!seq.Seq<nat.>.(Poly%vstd!seq.Seq<nat.>.(s!))), TYPE%vstd!seq.Seq.($, NAT))
I(%I(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0))))
=(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0)), I(%I(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0)))))
=(¬(true), false)
=(=>(%%location_label%%0, req%vstd!seq.impl&%0.spec_index.($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0))), ∨(¬(%%location_label%%0), req%vstd!seq.impl&%0.spec_index.($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0))))
%I(I(0))
vstd!seq.Seq.len.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!))
-1
*(-1, vstd!seq.Seq.len.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!)))
+(%I(I(0)), *(-1, vstd!seq.Seq.len.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!))))
=(%I(I(0)), 0)
%Poly%vstd!seq.Seq<nat.>.(Poly%vstd!seq.Seq<nat.>.(s!))
=(s!, %Poly%vstd!seq.Seq<nat.>.(Poly%vstd!seq.Seq<nat.>.(s!)))
has_type(Poly%vstd!seq.Seq<nat.>.(s!), TYPE%vstd!seq.Seq.($, NAT))
Poly%vstd!seq.Seq<nat.>.(%Poly%vstd!seq.Seq<nat.>.(Poly%vstd!seq.Seq<nat.>.(s!)))
has_type(Poly%vstd!seq.Seq<nat.>.(%Poly%vstd!seq.Seq<nat.>.(Poly%vstd!seq.Seq<nat.>.(s!))), TYPE%vstd!seq.Seq.($, NAT))
=(¬(true), false)


;; CDCL path
 * c0 (CdclBacklink { previous: None, backtrack: None, sidetrack: false })
 * c22 (CdclBacklink { previous: Some(c21), backtrack: Some(c0), sidetrack: true })
 * c25 (CdclBacklink { previous: Some(c24), backtrack: Some(c22), sidetrack: false })
 * c28 (CdclBacklink { previous: Some(c27), backtrack: Some(c25), sidetrack: false })
 * c31 (CdclBacklink { previous: Some(c30), backtrack: Some(c28), sidetrack: false })
 * c34 (CdclBacklink { previous: Some(c33), backtrack: Some(c31), sidetrack: false })
 * c37 (CdclBacklink { previous: Some(c36), backtrack: Some(c34), sidetrack: false })
 * c39 (CdclBacklink { previous: Some(c38), backtrack: Some(c37), sidetrack: true })


;; CDCL tree
>>> c0 ROOT (frame: s0)
true = ∧(¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq.axiom_seq_index_decreases.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq.axiom_seq_ext_equal.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq.axiom_seq_ext_equal_deep.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!array.group_array_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!function.group_seq_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!layout.group_layout_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!map.group_map_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!multiset.group_multiset_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq.axiom_seq_ext_equal.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq.axiom_seq_ext_equal_deep.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!array.group_array_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!function.group_seq_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!layout.group_layout_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!map.group_map_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!multiset.group_multiset_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!seq.axiom_seq_ext_equal_deep.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!array.group_array_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!function.group_seq_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!layout.group_layout_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!map.group_map_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!multiset.group_multiset_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!array.group_array_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!function.group_seq_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!layout.group_layout_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!map.group_map_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!multiset.group_multiset_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!function.group_seq_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!layout.group_layout_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!map.group_map_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!multiset.group_multiset_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!array.group_array_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!layout.group_layout_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!map.group_map_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!multiset.group_multiset_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!function.group_seq_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!map.group_map_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!multiset.group_multiset_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!layout.group_layout_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!multiset.group_multiset_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!map.group_map_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!seq.group_seq_axioms.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!seq_lib.group_filter_ensures.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!seq.group_seq_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!seq_lib.group_seq_lib_default.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!set.group_set_axioms.)), ¬(=(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!set.group_set_axioms., fuel%vstd!set_lib.group_set_lib_default.)), ¬(=(fuel%vstd!set.group_set_axioms., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!set.group_set_axioms., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!set.group_set_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!set.group_set_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!set.group_set_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!set.group_set_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!set.group_set_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!slice.group_slice_axioms.)), ¬(=(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!slice.group_slice_axioms., fuel%vstd!string.group_string_axioms.)), ¬(=(fuel%vstd!slice.group_slice_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!slice.group_slice_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!slice.group_slice_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!slice.group_slice_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!slice.group_slice_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!string.group_string_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)), ¬(=(fuel%vstd!string.group_string_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!string.group_string_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!string.group_string_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!string.group_string_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!std_specs.bits.group_bits_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)), ¬(=(fuel%vstd!std_specs.bits.group_bits_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!std_specs.bits.group_bits_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!std_specs.bits.group_bits_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!std_specs.control_flow.group_control_flow_axioms., fuel%vstd!std_specs.range.group_range_axioms.)), ¬(=(fuel%vstd!std_specs.control_flow.group_control_flow_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!std_specs.control_flow.group_control_flow_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!std_specs.range.group_range_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)), ¬(=(fuel%vstd!std_specs.range.group_range_axioms., fuel%vstd!group_vstd_default.)), ¬(=(fuel%vstd!std_specs.vec.group_vec_axioms., fuel%vstd!group_vstd_default.)))
true = fuel_bool_default(fuel%vstd!seq.group_seq_axioms.)
true = fuel_bool_default(fuel%vstd!seq_lib.group_seq_lib_default.)
true = fuel_bool_default(fuel%vstd!map.group_map_axioms.)
true = fuel_bool_default(fuel%vstd!set.group_set_axioms.)
true = fuel_bool_default(fuel%vstd!set_lib.group_set_lib_default.)
true = fuel_bool_default(fuel%vstd!std_specs.bits.group_bits_axioms.)
true = fuel_bool_default(fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
true = fuel_bool_default(fuel%vstd!std_specs.vec.group_vec_axioms.)
true = fuel_bool_default(fuel%vstd!slice.group_slice_axioms.)
true = fuel_bool_default(fuel%vstd!array.group_array_axioms.)
true = fuel_bool_default(fuel%vstd!multiset.group_multiset_axioms.)
true = fuel_bool_default(fuel%vstd!string.group_string_axioms.)
true = fuel_bool_default(fuel%vstd!std_specs.range.group_range_axioms.)
true = fuel_bool_default(fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
true = fuel_bool_default(fuel%vstd!layout.group_layout_axioms.)
true = fuel_bool_default(fuel%vstd!function.group_seq_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq.axiom_seq_index_decreases.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq.axiom_seq_ext_equal.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq.axiom_seq_ext_equal_deep.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!array.group_array_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!function.group_seq_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!layout.group_layout_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!map.group_map_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!multiset.group_multiset_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!seq.impl&%0.spec_index., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq.axiom_seq_ext_equal.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq.axiom_seq_ext_equal_deep.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!array.group_array_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!function.group_seq_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!layout.group_layout_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!map.group_map_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!multiset.group_multiset_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!seq.axiom_seq_index_decreases., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!seq.axiom_seq_ext_equal_deep.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!array.group_array_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!function.group_seq_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!layout.group_layout_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!map.group_map_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!multiset.group_multiset_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!array.group_array_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!function.group_seq_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!layout.group_layout_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!map.group_map_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!multiset.group_multiset_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!seq.axiom_seq_ext_equal_deep., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!function.group_seq_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!layout.group_layout_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!map.group_map_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!multiset.group_multiset_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!array.group_array_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!layout.group_layout_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!map.group_map_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!multiset.group_multiset_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!function.group_seq_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!map.group_map_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!multiset.group_multiset_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!layout.group_layout_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!multiset.group_multiset_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!map.group_map_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!raw_ptr.group_raw_ptr_axioms.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!multiset.group_multiset_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!seq.group_seq_axioms.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!raw_ptr.group_raw_ptr_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!seq_lib.group_filter_ensures.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!seq.group_seq_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!seq_lib.group_seq_lib_default.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!seq_lib.group_filter_ensures., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!set.group_set_axioms.)
false = =(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!seq_lib.group_seq_lib_default., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!set.group_set_axioms., fuel%vstd!set_lib.group_set_lib_default.)
false = =(fuel%vstd!set.group_set_axioms., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!set.group_set_axioms., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!set.group_set_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!set.group_set_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!set.group_set_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!set.group_set_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!set.group_set_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!slice.group_slice_axioms.)
false = =(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!set_lib.group_set_lib_default., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!slice.group_slice_axioms., fuel%vstd!string.group_string_axioms.)
false = =(fuel%vstd!slice.group_slice_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!slice.group_slice_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!slice.group_slice_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!slice.group_slice_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!slice.group_slice_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!string.group_string_axioms., fuel%vstd!std_specs.bits.group_bits_axioms.)
false = =(fuel%vstd!string.group_string_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!string.group_string_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!string.group_string_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!string.group_string_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!std_specs.bits.group_bits_axioms., fuel%vstd!std_specs.control_flow.group_control_flow_axioms.)
false = =(fuel%vstd!std_specs.bits.group_bits_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!std_specs.bits.group_bits_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!std_specs.bits.group_bits_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!std_specs.control_flow.group_control_flow_axioms., fuel%vstd!std_specs.range.group_range_axioms.)
false = =(fuel%vstd!std_specs.control_flow.group_control_flow_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!std_specs.control_flow.group_control_flow_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!std_specs.range.group_range_axioms., fuel%vstd!std_specs.vec.group_vec_axioms.)
false = =(fuel%vstd!std_specs.range.group_range_axioms., fuel%vstd!group_vstd_default.)
false = =(fuel%vstd!std_specs.vec.group_vec_axioms., fuel%vstd!group_vstd_default.)
false = ∨(¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.)), ¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.)), ¬(fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.)))
true = fuel_bool_default(fuel%vstd!seq_lib.group_filter_ensures.)
true = fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.)
true = fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.)
true = fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.)

### c1 BEGIN-CHECK Some(c0) (frame: s1)
true = ∀ "prelude_fuel_defaults" id: FuelId. pattern(fuel_bool(id)) =(fuel_bool(id), fuel_bool_default(id))
false = =(%I(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0))), 0)

### c2 DECISION (frame: s2)
true = =(SZ, 32)

### c3 DECISION (frame: s3)
false = fuel_bool(fuel%vstd!seq.impl&%0.spec_index.)

### c4 CONFLICT c1 (frame: s1)
true = =(fuel_bool(fuel%vstd!seq.impl&%0.spec_index.), fuel_bool_default(fuel%vstd!seq.impl&%0.spec_index.))
true = fuel_bool(fuel%vstd!seq.impl&%0.spec_index.)
true = ∀ "internal_vstd!seq.impl&__0.spec_index.?_definition" A&.: Dcr, A&: Type, self!: Poly, i!: Poly. pattern(vstd!seq.impl&%0.spec_index.?(A&., A&, self!, i!)) =(vstd!seq.impl&%0.spec_index.?(A&., A&, self!, i!), vstd!seq.Seq.index.?(A&., A&, self!, i!))

### c5 DECISION (frame: s4)
true = =(SZ, 32)

### c6 DECISION (frame: s5)
false = fuel_bool(fuel%vstd!seq.axiom_seq_index_decreases.)

### c7 CONFLICT c4 (frame: s1)
true = =(fuel_bool(fuel%vstd!seq.axiom_seq_index_decreases.), fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.))
true = fuel_bool(fuel%vstd!seq.axiom_seq_index_decreases.)
true = ∀ "user_vstd__seq__axiom_seq_index_decreases_0" A&.: Dcr, A&: Type, s!: Poly, i!: Poly. pattern(height(vstd!seq.Seq.index.?(A&., A&, s!, i!))) ∨(¬(has_type(s!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(has_type(i!, INT)), ¬(sized(A&.)), ¬(≥(%I(i!), 0)), ≥(+(%I(i!), *(-1, vstd!seq.Seq.len.?(A&., A&, s!))), 0), height_lt(height(vstd!seq.Seq.index.?(A&., A&, s!, i!)), height(s!)))

### c8 DECISION (frame: s6)
true = =(SZ, 32)

### c9 DECISION (frame: s7)
false = fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal.)

### c10 CONFLICT c7 (frame: s1)
true = =(fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.))
true = fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal.)
true = ∀ "user_vstd__seq__axiom_seq_ext_equal_2" A&.: Dcr, A&: Type, s1!: Poly, s2!: Poly. pattern(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)) ∨(¬(has_type(s1!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(has_type(s2!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(sized(A&.)), ¬(∨(¬(∨(¬(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)), ¬(∨(¬(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(A&., A&, s1!, i$)) pattern(vstd!seq.Seq.index.?(A&., A&, s2!, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(A&., A&, s1!))), 0), =(vstd!seq.Seq.index.?(A&., A&, s1!, i$), vstd!seq.Seq.index.?(A&., A&, s2!, i$)))))))), ¬(∨(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!), ¬(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.)), 0)), ≤(+(vstd!seq.Seq.len.?(A&., A&, s1!), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.)))), 0), =(vstd!seq.Seq.index.?(A&., A&, s1!, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.)), vstd!seq.Seq.index.?(A&., A&, s2!, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.))))))))))

### c11 DECISION (frame: s8)
true = =(SZ, 32)

### c12 DECISION (frame: s9)
false = fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal_deep.)

### c13 CONFLICT c10 (frame: s1)
true = =(fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal_deep.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.))
true = fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal_deep.)
true = ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_4" A&.: Dcr, A&: Type, s1!: Poly, s2!: Poly. pattern(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)) ∨(¬(has_type(s1!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(has_type(s2!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(sized(A&.)), ¬(∨(¬(∨(¬(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)), ¬(∨(¬(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(A&., A&, s1!, i$)) pattern(vstd!seq.Seq.index.?(A&., A&, s2!, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(A&., A&, s1!))), 0), ext_eq(true, A&, vstd!seq.Seq.index.?(A&., A&, s1!, i$), vstd!seq.Seq.index.?(A&., A&, s2!, i$)))))))), ¬(∨(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!), ¬(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.)), 0)), ≤(+(vstd!seq.Seq.len.?(A&., A&, s1!), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.)))), 0), ext_eq(true, A&, vstd!seq.Seq.index.?(A&., A&, s1!, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.)), vstd!seq.Seq.index.?(A&., A&, s2!, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.))))))))))

### c14 DECISION (frame: s10)
true = =(SZ, 32)

### c15 DECISION (frame: s11)
false = has_type(Poly%vstd!seq.Seq<nat.>.(s!), TYPE%vstd!seq.Seq.($, NAT))

### c16 CONFLICT c13 (frame: s1)
true = has_type(Poly%vstd!seq.Seq<nat.>.(s!), TYPE%vstd!seq.Seq.($, NAT))

### c17 DECISION (frame: s12)
true = =(SZ, 32)

### c18 DECISION (frame: s13)
false = has_type(I(0), INT)

### c19 CONFLICT c16 (frame: s1)
true = has_type(I(0), INT)
true = has_type(vstd!seq.Seq.index.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!), I(0)), NAT)

### c20 DECISION (frame: s14)
true = =(SZ, 32)

### c21 BEGIN-CHECK Some(c19) (frame: s1)

>>> c22 BEGIN-CHECK Some(c0) (frame: s15)
true = ∀ "prelude_fuel_defaults" id: FuelId. pattern(fuel_bool(id)) =(fuel_bool(id), fuel_bool_default(id))
false = ∨(¬(%%global_location_label%%1), ¬(∨(¬(≥(%I(I(0)), 0)), ≥(+(%I(I(0)), *(-1, vstd!seq.Seq.len.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!)))), 0))))
true = ≤(%I(I(0)), 0)
true = ≥(%I(I(0)), 0)
true = %%global_location_label%%1
true = ∨(¬(≥(%I(I(0)), 0)), ≥(+(%I(I(0)), *(-1, vstd!seq.Seq.len.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!)))), 0))
true = ≥(+(%I(I(0)), *(-1, vstd!seq.Seq.len.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!)))), 0)

### c23 DECISION (frame: s16)
true = =(SZ, 32)

### c24 DECISION (frame: s17)
false = fuel_bool(fuel%vstd!seq.impl&%0.spec_index.)

>>> c25 CONFLICT c22 (frame: s15)
true = =(fuel_bool(fuel%vstd!seq.impl&%0.spec_index.), fuel_bool_default(fuel%vstd!seq.impl&%0.spec_index.))
true = fuel_bool(fuel%vstd!seq.impl&%0.spec_index.)
true = ∀ "internal_vstd!seq.impl&__0.spec_index.?_definition" A&.: Dcr, A&: Type, self!: Poly, i!: Poly. pattern(vstd!seq.impl&%0.spec_index.?(A&., A&, self!, i!)) =(vstd!seq.impl&%0.spec_index.?(A&., A&, self!, i!), vstd!seq.Seq.index.?(A&., A&, self!, i!))

### c26 DECISION (frame: s18)
true = =(SZ, 32)

### c27 DECISION (frame: s19)
false = fuel_bool(fuel%vstd!seq.axiom_seq_index_decreases.)

>>> c28 CONFLICT c25 (frame: s15)
true = =(fuel_bool(fuel%vstd!seq.axiom_seq_index_decreases.), fuel_bool_default(fuel%vstd!seq.axiom_seq_index_decreases.))
true = fuel_bool(fuel%vstd!seq.axiom_seq_index_decreases.)
true = ∀ "user_vstd__seq__axiom_seq_index_decreases_0" A&.: Dcr, A&: Type, s!: Poly, i!: Poly. pattern(height(vstd!seq.Seq.index.?(A&., A&, s!, i!))) ∨(¬(has_type(s!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(has_type(i!, INT)), ¬(sized(A&.)), ¬(≥(%I(i!), 0)), ≥(+(%I(i!), *(-1, vstd!seq.Seq.len.?(A&., A&, s!))), 0), height_lt(height(vstd!seq.Seq.index.?(A&., A&, s!, i!)), height(s!)))

### c29 DECISION (frame: s20)
true = =(SZ, 32)

### c30 DECISION (frame: s21)
false = fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal.)

>>> c31 CONFLICT c28 (frame: s15)
true = =(fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal.))
true = fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal.)
true = ∀ "user_vstd__seq__axiom_seq_ext_equal_2" A&.: Dcr, A&: Type, s1!: Poly, s2!: Poly. pattern(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)) ∨(¬(has_type(s1!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(has_type(s2!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(sized(A&.)), ¬(∨(¬(∨(¬(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)), ¬(∨(¬(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_1" i$: Poly. pattern(vstd!seq.Seq.index.?(A&., A&, s1!, i$)) pattern(vstd!seq.Seq.index.?(A&., A&, s2!, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(A&., A&, s1!))), 0), =(vstd!seq.Seq.index.?(A&., A&, s1!, i$), vstd!seq.Seq.index.?(A&., A&, s2!, i$)))))))), ¬(∨(ext_eq(false, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!), ¬(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.)), 0)), ≤(+(vstd!seq.Seq.len.?(A&., A&, s1!), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.)))), 0), =(vstd!seq.Seq.index.?(A&., A&, s1!, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.)), vstd!seq.Seq.index.?(A&., A&, s2!, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_1!0(s2!, s1!, A&, A&.))))))))))

### c32 DECISION (frame: s22)
true = =(SZ, 32)

### c33 DECISION (frame: s23)
false = fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal_deep.)

>>> c34 CONFLICT c31 (frame: s15)
true = =(fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal_deep.), fuel_bool_default(fuel%vstd!seq.axiom_seq_ext_equal_deep.))
true = fuel_bool(fuel%vstd!seq.axiom_seq_ext_equal_deep.)
true = ∀ "user_vstd__seq__axiom_seq_ext_equal_deep_4" A&.: Dcr, A&: Type, s1!: Poly, s2!: Poly. pattern(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)) ∨(¬(has_type(s1!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(has_type(s2!, TYPE%vstd!seq.Seq.(A&., A&))), ¬(sized(A&.)), ¬(∨(¬(∨(¬(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!)), ¬(∨(¬(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!))), ¬(∀ "user_vstd__seq__axiom_seq_ext_equal_deep_3" i$: Poly. pattern(vstd!seq.Seq.index.?(A&., A&, s1!, i$)) pattern(vstd!seq.Seq.index.?(A&., A&, s2!, i$)) ∨(¬(has_type(i$, INT)), ¬(≥(%I(i$), 0)), ≥(+(%I(i$), *(-1, vstd!seq.Seq.len.?(A&., A&, s1!))), 0), ext_eq(true, A&, vstd!seq.Seq.index.?(A&., A&, s1!, i$), vstd!seq.Seq.index.?(A&., A&, s2!, i$)))))))), ¬(∨(ext_eq(true, TYPE%vstd!seq.Seq.(A&., A&), s1!, s2!), ¬(=(vstd!seq.Seq.len.?(A&., A&, s1!), vstd!seq.Seq.len.?(A&., A&, s2!))), ¬(∨(¬(has_type(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.), INT)), ¬(≥(%I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.)), 0)), ≤(+(vstd!seq.Seq.len.?(A&., A&, s1!), *(-1, %I(i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.)))), 0), ext_eq(true, A&, vstd!seq.Seq.index.?(A&., A&, s1!, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.)), vstd!seq.Seq.index.?(A&., A&, s2!, i$!skolem_user_vstd__seq__axiom_seq_ext_equal_deep_3!1(s2!, s1!, A&, A&.))))))))))

### c35 DECISION (frame: s24)
true = =(SZ, 32)

### c36 DECISION (frame: s25)
false = has_type(Poly%vstd!seq.Seq<nat.>.(s!), TYPE%vstd!seq.Seq.($, NAT))

>>> c37 CONFLICT c34 (frame: s15)
true = has_type(Poly%vstd!seq.Seq<nat.>.(s!), TYPE%vstd!seq.Seq.($, NAT))
true = ≥(vstd!seq.Seq.len.?($, NAT, Poly%vstd!seq.Seq<nat.>.(s!)), 0)

### c38 DECISION (frame: s26)
true = =(SZ, 32)

>>> c39 BEGIN-CHECK Some(c37) (frame: s15)

